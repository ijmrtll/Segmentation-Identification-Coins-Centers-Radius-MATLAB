function thresIma = imBW(Ima, im, names)%Function to change a gray scale image to bwc = 'y';while(c == 'y')    disp('');    disp('What kind of level would you like to apply')    disp(' [0] Cancel')    disp(' [1] Single level value')    disp(' [2] Range of level values')    disp(' [3] Fix minValue range two level tresholding')    disp(' [4] Two level tresholding')    disp('');    ope = input('What kind of level would you like to apply? [0...4]: ');    disp('');        thresIma = zeros(size(Ima));        switch ope        case 0            thresIma = Ima;            break        case 1            thresIma = singleValue(Ima, im, names);        case 2            thresIma = rangeValue(Ima, im, names);        case 3            thresIma = fix2Values(Ima, im, names);        case 4            thresIma = twoValues(Ima, im, names);    end        %ask if you want to try different values    while(true)        c = lower(input('Would you like to try again? y/n: ','s'));        if(c == 'y')            break        else            msgbox('You are now working with a thresholded image!!');            break        end    endendendfunction thresIma = singleValue(Ima)level = input('What level would you like to use (0...1)? ');thresIma = im2bw(Ima, level);figure(3)imshow(thresIma, [0 1]);THR = ['level = ', num2str(level)];title(['BW Image: ', THR])if(input('Do you want to invert image? y/n: ','s') == 'y')    thresIma = not(thresIma);    figure(3)    imshow(thresIma, [0 1]);    title(['Inverted Thresholded Image: ', THR])endendfunction thresIma = rangeValue(Ima)minLevel = input('What is the min level you want to use (0...1)? ');maxLevel = input('What is the max level you want to use (0...1)? ');stepLevel = input('What is the step value? ');disp('');for level = minLevel:stepLevel:maxLevel    disp(['level= ' num2str(level) '']);    thresIma = im2bw(Ima, level);    figure(3)    imshow(thresIma, [0 1]);    THR = ['level = ', num2str(level)];    title(['BW Image: ', THR])    disp('Press any key to continue')    pauseendendfunction thresIma = fix2Values(Ima)minLevel = input('What is the min level you want to use (0...1)? ');maxLevel = input('What is the max level you want to use (0...1)? ');stepLevel = input('What is the step value? ');disp('');for level = minLevel:stepLevel:maxLevel    disp(['level= ' num2str(level) '']);    thresIma = not(im2bw(Ima, minLevel))|im2bw(Ima, level);    figure(3)    imshow(thresIma, [0 1]);    THR = ['minLevel = ' num2str(minLevel) '; maxlevel = ', num2str(level)];    title(['BW Image: ', THR])    disp('Press any key to continue')    pauseendendfunction thresIma = twoValues(Ima)minLevel = input('What is the min level you want to use (0...1)? ');maxLevel = input('What is the max level you want to use (0...1)? ');thresIma = not(im2bw(Ima, minLevel))|im2bw(Ima, maxLevel); %#ok<*IM2BW>figure(3)imshow(thresIma, [0 1]);THR = ['minLevel = ' num2str(minLevel) '; maxlevel = ', num2str(maxLevel)];title(['BW Image: ', THR])end